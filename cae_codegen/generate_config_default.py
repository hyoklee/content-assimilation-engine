#!/usr/bin/env python3
"""Generate C++ header with default configuration from YAML"""
import pathlib
import yaml

def main():
    # Get script location and project root
    script_path = pathlib.Path(__file__).resolve()
    project_root = script_path.parent.parent
    
    # Define paths relative to project root
    yaml_path = project_root / "config" / "cae_client_default.yaml"
    config_dir = project_root / "adapters" / "config"
    header_path = config_dir / "config_client_default.h"
    
    # Ensure config directory exists
    config_dir.mkdir(parents=True, exist_ok=True)
    
    # Read YAML config
    with open(yaml_path) as f:
        config = yaml.safe_load(f)

    # Generate header content
    header = f"""// Generated by {script_path.name}
#ifndef IOWARP_CAE_CONF_CLIENT_DEFAULT_H_
#define IOWARP_CAE_CONF_CLIENT_DEFAULT_H_

#include <string>

namespace cae {{

static const char* kCaeClientDefaultConfigStr = R"(
{yaml.dump(config, default_flow_style=False)}
)";

}}  // namespace cae

#endif  // IOWARP_CAE_CONF_CLIENT_DEFAULT_H_
"""

    # Write header
    with open(header_path, 'w') as f:
        f.write(header)
        print(f"Generated {header_path} from {yaml_path}")

if __name__ == '__main__':
    main() 