name: win omni r

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2022, windows-2025, windows-11-arm]
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: install
        run: |
          vcpkg install poco[crypto,netssl] yaml-cpp nlohmann-json
          vcpkg integrate install
      - name: test
        run: |
          cd omni
          mkdir build
          cd build
          cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE="C:/vcpkg/scripts/buildsystems/vcpkg.cmake" -DSITE:STRING="${{ matrix.os }}" -DBUILDNAME="omni/r" ..
          ctest -C Release -D Experimental
          cd ../..
        shell: cmd
      - name: poco
        run: |
          cd omni
          mkdir poco
          cd poco
          cmake -DUSE_POCO=ON -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE="C:/vcpkg/scripts/buildsystems/vcpkg.cmake" -DSITE:STRING="${{ matrix.os }}" -DBUILDNAME="omni/r/poco" ..
          ctest -C Release -D Experimental
        shell: cmd
      - name: setup-msmpi
        uses: mpi4py/setup-mpi@v1
        with:
          mpi: msmpi
      - name: hdf5-mpi
        run: |
          vcpkg install hdf5[parallel]:x64-windows
          cd omni
          mkdir hdf5
          cd hdf5
          cmake -DUSE_HDF5=ON -DUSE_MPI=ON -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE="C:/vcpkg/scripts/buildsystems/vcpkg.cmake" -DSITE:STRING="${{ matrix.os }}" -DBUILDNAME="omni/r/hdf5-mpi" ..
          ctest -C Release -D Experimental
        shell: cmd
